name: Release

on:
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: List Git tags
        run: git tag

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./...

      - name: Install gsemver
        run: |
          go install github.com/arnaud-deprez/gsemver@latest
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH

      - name: Set Git config
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_ACTOR }}"

      - name: Run gsemver
        id: gsemver
        run: |
          VERSION=$(gsemver bump)
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
        shell: /usr/bin/bash -e {0}
        env:
          GOROOT: /opt/hostedtoolcache/go/1.17.13/x64
          VERSION: ${{ steps.gsemver.outputs.VERSION }}

      - name: Install git-chglog
        run: |
          go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH

      - name: Generate Changelog
        id: changelog
        run: |
          export REPO_URL="https://github.com/${GITHUB_REPOSITORY}"
          git-chglog --next-tag ${{ env.VERSION }} -o CHANGELOG.md --repository-url $REPO_URL
          CHANGELOG=$(cat CHANGELOG.md)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "--- CHANGELOG content ---"
          cat CHANGELOG.md
          echo "--- End of CHANGELOG content ---"
        shell: /usr/bin/bash -e {0}
        env:
          GOROOT: /opt/hostedtoolcache/go/1.17.13/x64
          VERSION: ${{ env.VERSION }}
          TAG_EXISTS: false

      - name: Commit and Push Changelog
        if: env.TAG_EXISTS == 'false'
        run: |
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG for version ${{ env.VERSION }}"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git tag
        if: env.TAG_EXISTS == 'false'
        run: |
          git tag -a "${{ env.VERSION }}" -m "Release ${{ env.VERSION }}"
          git push origin "${{ env.VERSION }}"

      - name: Create Release
        if: env.TAG_EXISTS == 'false'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false